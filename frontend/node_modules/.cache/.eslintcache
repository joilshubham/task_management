[{"C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\index.js":"1","C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\Routes.js":"2","C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\user\\UserDashboard.js":"3","C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\user\\Signin.js":"4","C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\user\\Signup.js":"5","C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\auth\\helper\\PrivateRoutes.js":"6","C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\auth\\helper\\index.js":"7","C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\core\\Base.js":"8","C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\backend.js":"9","C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\core\\Menu.js":"10","C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\core\\Home.js":"11","C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\core\\Card.js":"12","C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\core\\helper\\coreapicalls.js":"13","C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\core\\Timer.js":"14","C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\core\\AddTask.js":"15"},{"size":177,"mtime":1618750698274,"results":"16","hashOfConfig":"17"},{"size":875,"mtime":1618803854904,"results":"18","hashOfConfig":"17"},{"size":239,"mtime":1618803460134,"results":"19","hashOfConfig":"17"},{"size":4171,"mtime":1618803983817,"results":"20","hashOfConfig":"17"},{"size":4265,"mtime":1618803995272,"results":"21","hashOfConfig":"17"},{"size":618,"mtime":1618750698505,"results":"22","hashOfConfig":"17"},{"size":2035,"mtime":1618793082947,"results":"23","hashOfConfig":"17"},{"size":1159,"mtime":1618799066730,"results":"24","hashOfConfig":"17"},{"size":49,"mtime":1618750698211,"results":"25","hashOfConfig":"17"},{"size":2330,"mtime":1618803766087,"results":"26","hashOfConfig":"17"},{"size":1415,"mtime":1618803035115,"results":"27","hashOfConfig":"17"},{"size":2810,"mtime":1618804239361,"results":"28","hashOfConfig":"17"},{"size":457,"mtime":1618750698971,"results":"29","hashOfConfig":"17"},{"size":1540,"mtime":1618802530193,"results":"30","hashOfConfig":"17"},{"size":6735,"mtime":1618803676443,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"gteli",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},"C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\index.js",[],["67","68"],"C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\Routes.js",[],"C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\user\\UserDashboard.js",[],"C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\user\\Signin.js",["69","70","71"],"import React, {useState} from 'react';\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { authenticate, isAuthenticated, signin } from '../auth/helper';\r\n\r\nimport Base from '../core/Base';\r\n\r\n\r\nconst Signin = () =>{\r\n\r\n    const [values, setValues] = useState({\r\n        username : '',\r\n        password : '',\r\n        error : '',\r\n        success : false,\r\n        loading: false,\r\n        didRedirect: false,\r\n    });\r\n\r\n    const {username, password, error, success, loading, didRedirect} = values;\r\n\r\n    const handleChange = (name) => (event) =>{\r\n        setValues({...values, error:false, [name]: event.target.value});\r\n    };\r\n\r\n    const onSubmit = (event) =>{\r\n        event.preventDefault();\r\n        setValues({...values, error:false, loading:true})\r\n\r\n        signin({username, password})\r\n        .then(data => {\r\n            console.log('DATA', data);\r\n            if(data.token){\r\n                // let sessionToken = data.token;\r\n                authenticate(data, () =>{\r\n                    console.log('TOKEN ADDED')\r\n                    setValues({\r\n                        ...values,\r\n                        didRedirect: true,\r\n                    })\r\n                })\r\n            }else{\r\n                setValues({\r\n                    ...values,\r\n                    loading:false,\r\n                })\r\n            }\r\n        })\r\n        .catch((e) => console.log(e));\r\n    };\r\n\r\n    const performRedirect = () =>{\r\n        if (isAuthenticated()) {\r\n            return <Redirect to = '/' />\r\n        }\r\n    };\r\n\r\n    const loadingMessage = () =>{\r\n        return (\r\n            loading && (\r\n                <div className = 'alert alert-info'>\r\n                    <h2>Loading.....</h2>\r\n                </div>\r\n            )\r\n        )\r\n    }\r\n\r\n    const successMessage = () => {\r\n        return (\r\n            <div className = 'row'>\r\n                <div className = 'col-md-6 offset-sm-3 text-left'>\r\n                    <div className = 'alert alert-success' style = {{display : success ? \"\" : \"none\"}}>\r\n                        New account created successfully. <Link to = '/signin'>Login Now</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const errorMessage = () => {\r\n        return (\r\n            <div className = 'row'>\r\n                <div className = 'col-md-6 offset-sm-3 text-left'>\r\n                    <div className = 'alert alert-danger' style = {{display : error ? \"\" : \"none\"}}>\r\n                        Check all fields again\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const signInForm = () => {\r\n        return (\r\n            <div className = 'row'>\r\n                <div className ='col-md-6 offset-sm-3 text-left'>\r\n                    <form>\r\n                        <div className = 'form-group'>\r\n                            <label className = 'text-light'>Username</label>\r\n                            <input \r\n                            className = 'form-control'\r\n                            value = {username}\r\n                            onChange = {handleChange('username')}\r\n                            type = 'text'/>\r\n                        </div>\r\n                        <div className = 'form-group'>\r\n                            <label className = 'text-light'>Password</label>\r\n                            <input \r\n                            className = 'form-control'\r\n                            value = {password}\r\n                            onChange = {handleChange('password')}\r\n                            type = 'password'/>\r\n                        </div><br/>\r\n                        <button onClick={onSubmit} className = 'btn btn-success btn-block'>Submit</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Base title = 'Sign-in' description = 'Sign-in into your task manager account'>\r\n            {loadingMessage()}\r\n            {signInForm()}\r\n            <p className = 'text-center'></p>\r\n            {performRedirect()}\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default Signin","C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\user\\Signup.js",[],"C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\auth\\helper\\PrivateRoutes.js",[],"C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\auth\\helper\\index.js",[],"C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\core\\Base.js",[],"C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\backend.js",[],"C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\core\\Menu.js",[],"C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\core\\Home.js",["72","73"],"import React, { useState, useEffect } from 'react'\r\nimport {getTimeEntry} from './helper/coreapicalls'\r\nimport { isAuthenticated } from '../auth/helper';\r\n\r\nimport Base from './Base';\r\nimport Card from './Card';\r\nimport '../styles.css';\r\n\r\nexport default function Home (){\r\n    const [timeEntrys, setTimeEntrys] = useState([]);\r\n    const [filterDate, setFilterDate] = useState([Date.now()]);\r\n    const [error, setError] = useState(false)\r\n\r\n    const id = isAuthenticated && isAuthenticated().user.id\r\n\r\n    const loadTimeEntry = (id) => {\r\n        getTimeEntry(id)\r\n        .then(data =>{\r\n            if (data.error) {\r\n                setError(data.error);\r\n                console.log(error);\r\n            }else {\r\n                setTimeEntrys(data);\r\n            }\r\n        }\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadTimeEntry(id);\r\n    })\r\n\r\n\r\n    const SetDateFilter = (event) =>{\r\n        setFilterDate(event.target.value);\r\n    };\r\n\r\n\r\n    return(\r\n        <Base title = 'Task' description = 'management'>\r\n            <div className = 'row'>\r\n                {timeEntrys.map((timeEntry) => {\r\n                    return(\r\n                        <div key = {timeEntry.id} className = 'col-12 mb-12'>\r\n                            <Card timeEntry = {timeEntry}/>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n            </div>\r\n        </Base>\r\n    )\r\n}","C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\core\\Card.js",["74","75","76"],"C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\core\\helper\\coreapicalls.js",[],"C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\core\\Timer.js",["77"],"import { useEffect, useState } from 'react';\r\nimport moment from 'moment'\r\n\r\nconst Timer = (tempDate) => {\r\n\r\n    const [time, setTime] = useState(0);\r\n\r\n    const hourCheck = (tempDate) => {\r\n        const dateAdded = moment(tempDate).toISOString();\r\n        const now = moment().toISOString();\r\n        const ms = moment(now).diff(moment(dateAdded));\r\n        const d = moment.duration(ms);\r\n        const hours = Math.floor(d.asHours()) + moment.utc(ms).format(\":mm:ss\");\r\n        console.log(d)\r\n        return hours;\r\n    }\r\n\r\n    // const showTime = () => {\r\n    //     let time = new Date();\r\n    //     let hour = time.getHours();\r\n    //     let min = time.getMinutes();\r\n    //     let sec = time.getSeconds();\r\n    //     let am_pm = \"AM\";\r\n\r\n    //     if (hour > 12) {\r\n    //         hour -= 12;\r\n    //         am_pm = \"PM\";\r\n    //     }\r\n    //     if (hour == 0) {\r\n    //         hour = 12;\r\n    //         am_pm = \"AM\";\r\n    //     }\r\n\r\n    //     hour = hour < 10 ? \"0\" + hour : hour;\r\n    //     min = min < 10 ? \"0\" + min : min;\r\n    //     sec = sec < 10 ? \"0\" + sec : sec;\r\n\r\n    //     let currentTime = hour + \":\" + min + \":\" + sec + am_pm;\r\n\r\n    //     return currentTime;\r\n    // }\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => setTime(hourCheck(tempDate)), 1000);\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1> Last updated {time} hrs ago. </h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Timer;","C:\\Users\\10647616\\Downloads\\time_entry\\time_entry\\frontend\\src\\core\\AddTask.js",["78","79"],"import React, { useState, useEffect} from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport Base from './Base';\r\nimport {getProjects} from './helper/coreapicalls'\r\nimport {signup, isAuthenticated,addTaskFunc} from '../auth/helper/index'\r\n\r\n\r\nconst AddTask = () =>{\r\n    const [values, setValues] = useState({\r\n        task_name : '',\r\n        task_description : '',\r\n        project : '',\r\n        task_start : '',\r\n        task_end : '',\r\n        error : '',\r\n        success : false,\r\n    });\r\n\r\n    const [timer, setTimer] = useState(false)\r\n    const [allProjects, setAllProjects] = useState([])\r\n\r\n    const {task_name, task_description, project, task_start, task_end,error, success} = values;\r\n    const id = isAuthenticated && isAuthenticated().user.id;\r\n\r\n  //   useEffect(() => {\r\n  //     projectGetter(id);\r\n  // })\r\n\r\n    const handleChange = (name) => (event) =>{\r\n        setValues({...values, error:false, [name]: event.target.value});\r\n    };\r\n\r\n    const onSubmit = (event) =>{\r\n        event.preventDefault();\r\n        if (task_start === '' && task_end === ''){setValues({...values, task_start : null , task_end : null,error:false});}\r\n        \r\n        addTaskFunc({task_name, task_description, project, task_start, task_end}, id)\r\n        .then((data) => {\r\n            console.log('DATA', data);\r\n            if (data.success){\r\n                setValues({\r\n                    ...values,\r\n                    task_name:'',\r\n                    task_description:'',\r\n                    task_start:'',\r\n                    task_end:'',\r\n                    error:'',\r\n                    success: true\r\n                })\r\n            }else{\r\n                setValues({\r\n                    ...values,\r\n                    error: true,\r\n                    success: false\r\n                })\r\n            }\r\n        })\r\n        .catch((e) => console.log(e));\r\n    };\r\n\r\n    const successMessage = () => {\r\n        return (\r\n            <div className = 'row'>\r\n                <div className = 'col-md-6 offset-sm-3 text-left'>\r\n                    <div className = 'alert alert-success' style = {{display : success ? \"\" : \"none\"}}>\r\n                        New Task created successfully. <Link to = '/'>Go To Home</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const errorMessage = () => {\r\n        return (\r\n            <div className = 'row'>\r\n                <div className = 'col-md-6 offset-sm-3 text-left'>\r\n                    <div className = 'alert alert-danger' style = {{display : error ? \"\" : \"none\"}}>\r\n                        Check all fields again\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    \r\n    const projectGetter = (id) =>{\r\n      getProjects(id)\r\n      .then((data) => {\r\n        console.log('DATA', JSON.stringify(data));\r\n        if (data){\r\n          setAllProjects(data)};      \r\n      }).catch((e) => console.log(e))\r\n    };\r\n\r\n    const setTimerFunc = () =>{\r\n      // event.preventDefault();\r\n      // set_timer = !set_timer\r\n      setTimer(!timer)\r\n    }\r\n\r\n    const signUpForm = () => {\r\n        return (\r\n            <div className = 'row'>\r\n                <div className ='col-md-6 offset-sm-3 text-left'>\r\n                    <form>\r\n                        <div className = 'form-group'>\r\n                            <label className = 'text-light'>Task Name</label>\r\n                            <input \r\n                            className = 'form-control'\r\n                            value = {task_name}\r\n                            onChange = {handleChange('task_name')}\r\n                            type = 'text'/>\r\n                        </div>\r\n                        <div className = 'form-group'>\r\n                            <label className = 'text-light'>Task Description</label>\r\n                            <input \r\n                            className = 'form-control input-lg'\r\n                            value = {task_description}\r\n                            onChange = {handleChange('task_description')}\r\n                            type = 'text'/>\r\n                        </div>\r\n                        <div className = 'form-group'>\r\n                            <label className = 'text-light lead'>Project</label><br/>\r\n                            <select className=\"form-control form-select\" onChange = {handleChange('project')} aria-label=\"Default select example\">\r\n                            {allProjects.map((proj) =>{\r\n                              return(\r\n                                <option  key = {proj.id} value={proj.id}>{proj.name}</option>\r\n                              )\r\n                            }) }\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-check\">\r\n                        <input className=\"form-check-input lg\" type=\"checkbox\" onChange = {setTimerFunc} id=\"Check1\"/>\r\n                        <label className=\"form-check-label\" for=\"Check1\">\r\n                          Set timer for this task\r\n                        </label>\r\n                        </div><br/>\r\n                        {(!timer) ?                        \r\n                          (<div>\r\n                          <label for=\"daytime-start\">Task started at (date and time):</label>\r\n                          <div className = 'form-group'>\r\n                          <input type=\"datetime-local\" onChange = {handleChange('task_start')} id=\"daytime-start\" name=\"daytime-start\"/>\r\n                          </div><br/>\r\n                          <label for=\"daytime-end\">Task ended at (date and time):</label>\r\n                          <div className = 'form-group'>\r\n                          <input type=\"datetime-local\" onChange = {handleChange('task_end')} id=\"daytime-end\" name=\"daytime-end\"/>\r\n                          </div>\r\n                          </div>\r\n                          ):\r\n                          <div>\r\n\r\n                          </div>\r\n                            \r\n                        }\r\n                        <button onClick={onSubmit} className = 'btn btn-success btn-block'>Submit</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    return(\r\n      <div>\r\n          {!isAuthenticated() ? (<Redirect to = '/signin' />) :\r\n      (<Base title = 'Add tasks' description = \"Add your task's here !\">\r\n          {projectGetter(id)}\r\n          {successMessage()}\r\n          {errorMessage()}\r\n          {signUpForm()}\r\n          <p className = 'text-white text-center'>\r\n          </p> \r\n      </Base>)}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default AddTask\r\n",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":19,"column":57,"nodeType":"86","messageId":"87","endLine":19,"endColumn":68},{"ruleId":"84","severity":1,"message":"88","line":67,"column":11,"nodeType":"86","messageId":"87","endLine":67,"endColumn":25},{"ruleId":"84","severity":1,"message":"89","line":79,"column":11,"nodeType":"86","messageId":"87","endLine":79,"endColumn":23},{"ruleId":"84","severity":1,"message":"90","line":11,"column":12,"nodeType":"86","messageId":"87","endLine":11,"endColumn":22},{"ruleId":"84","severity":1,"message":"91","line":34,"column":11,"nodeType":"86","messageId":"87","endLine":34,"endColumn":24},{"ruleId":"84","severity":1,"message":"92","line":15,"column":22,"nodeType":"86","messageId":"87","endLine":15,"endColumn":33},{"ruleId":"84","severity":1,"message":"93","line":23,"column":11,"nodeType":"86","messageId":"87","endLine":23,"endColumn":21},{"ruleId":"84","severity":1,"message":"94","line":46,"column":11,"nodeType":"86","messageId":"87","endLine":46,"endColumn":26},{"ruleId":"95","severity":1,"message":"96","line":48,"column":8,"nodeType":"97","endLine":48,"endColumn":10,"suggestions":"98"},{"ruleId":"84","severity":1,"message":"99","line":1,"column":27,"nodeType":"86","messageId":"87","endLine":1,"endColumn":36},{"ruleId":"84","severity":1,"message":"100","line":5,"column":9,"nodeType":"86","messageId":"87","endLine":5,"endColumn":15},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'didRedirect' is assigned a value but never used.","Identifier","unusedVar","'successMessage' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'filterDate' is assigned a value but never used.","'SetDateFilter' is assigned a value but never used.","'setRedirect' is assigned a value but never used.","'showTimer1' is assigned a value but never used.","'showEndTaskBttn' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tempDate'. Either include it or remove the dependency array. If 'setTime' needs the current value of 'tempDate', you can also switch to useReducer instead of useState and read 'tempDate' in the reducer.","ArrayExpression",["103"],"'useEffect' is defined but never used.","'signup' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},"Update the dependencies array to be: [tempDate]",{"range":"106","text":"107"},[1400,1402],"[tempDate]"]