{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\10647616\\\\Downloads\\\\time_entry\\\\time_entry\\\\frontend\\\\src\\\\user\\\\Signin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { authenticate, isAuthenticated, signin } from '../auth/helper';\nimport Base from '../core/Base';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signin = () => {\n  _s();\n\n  const [values, setValues] = useState({\n    username: '',\n    password: '',\n    error: '',\n    success: false,\n    loading: false,\n    didRedirect: false\n  });\n  const {\n    username,\n    password,\n    error,\n    success,\n    loading,\n    didRedirect\n  } = values;\n\n  const handleChange = name => event => {\n    setValues({ ...values,\n      error: false,\n      [name]: event.target.value\n    });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values,\n      error: false,\n      loading: true\n    });\n    signin({\n      username,\n      password\n    }).then(data => {\n      console.log('DATA', data);\n\n      if (data.token) {\n        // let sessionToken = data.token;\n        authenticate(data, () => {\n          console.log('TOKEN ADDED');\n          setValues({ ...values,\n            didRedirect: true\n          });\n        });\n      } else {\n        setValues({ ...values,\n          loading: false\n        });\n      }\n    }).catch(e => console.log(e));\n  };\n\n  const performRedirect = () => {\n    if (isAuthenticated()) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  const loadingMessage = () => {\n    return loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading.....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this);\n  };\n\n  const successMessage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-sm-3 text-left\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-success\",\n          style: {\n            display: success ? \"\" : \"none\"\n          },\n          children: [\"New account created successfully. \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signin\",\n            children: \"Login Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 59\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  };\n\n  const errorMessage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-sm-3 text-left\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          style: {\n            display: error ? \"\" : \"none\"\n          },\n          children: \"Check all fields again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  };\n\n  const signInForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-sm-3 text-left\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-light\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              value: username,\n              onChange: handleChange('username'),\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-light\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              value: password,\n              onChange: handleChange('password'),\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onSubmit,\n            className: \"btn btn-success btn-block\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Base, {\n    title: \"Sign-in\",\n    description: \"Sign-in nerdy user\",\n    children: [loadingMessage(), signInForm(), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: JSON.stringify(values)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), performRedirect()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Signin, \"qjz2ViM4tR186Fl9OYC0YgYV6Dw=\");\n\n_c = Signin;\nexport default Signin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"sources":["C:/Users/10647616/Downloads/time_entry/time_entry/frontend/src/user/Signin.js"],"names":["React","useState","Link","Redirect","authenticate","isAuthenticated","signin","Base","Signin","values","setValues","username","password","error","success","loading","didRedirect","handleChange","name","event","target","value","onSubmit","preventDefault","then","data","console","log","token","catch","e","performRedirect","loadingMessage","successMessage","display","errorMessage","signInForm","JSON","stringify"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { authenticate, isAuthenticated, signin } from '../auth/helper';\r\n\r\nimport Base from '../core/Base';\r\n\r\n\r\nconst Signin = () =>{\r\n\r\n    const [values, setValues] = useState({\r\n        username : '',\r\n        password : '',\r\n        error : '',\r\n        success : false,\r\n        loading: false,\r\n        didRedirect: false,\r\n    });\r\n\r\n    const {username, password, error, success, loading, didRedirect} = values;\r\n\r\n    const handleChange = (name) => (event) =>{\r\n        setValues({...values, error:false, [name]: event.target.value});\r\n    };\r\n\r\n    const onSubmit = (event) =>{\r\n        event.preventDefault();\r\n        setValues({...values, error:false, loading:true})\r\n\r\n        signin({username, password})\r\n        .then(data => {\r\n            console.log('DATA', data);\r\n            if(data.token){\r\n                // let sessionToken = data.token;\r\n                authenticate(data, () =>{\r\n                    console.log('TOKEN ADDED')\r\n                    setValues({\r\n                        ...values,\r\n                        didRedirect: true,\r\n                    })\r\n                })\r\n            }else{\r\n                setValues({\r\n                    ...values,\r\n                    loading:false,\r\n                })\r\n            }\r\n        })\r\n        .catch((e) => console.log(e));\r\n    };\r\n\r\n    const performRedirect = () =>{\r\n        if (isAuthenticated()) {\r\n            return <Redirect to = '/' />\r\n        }\r\n    };\r\n\r\n    const loadingMessage = () =>{\r\n        return (\r\n            loading && (\r\n                <div className = 'alert alert-info'>\r\n                    <h2>Loading.....</h2>\r\n                </div>\r\n            )\r\n        )\r\n    }\r\n\r\n    const successMessage = () => {\r\n        return (\r\n            <div className = 'row'>\r\n                <div className = 'col-md-6 offset-sm-3 text-left'>\r\n                    <div className = 'alert alert-success' style = {{display : success ? \"\" : \"none\"}}>\r\n                        New account created successfully. <Link to = '/signin'>Login Now</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const errorMessage = () => {\r\n        return (\r\n            <div className = 'row'>\r\n                <div className = 'col-md-6 offset-sm-3 text-left'>\r\n                    <div className = 'alert alert-danger' style = {{display : error ? \"\" : \"none\"}}>\r\n                        Check all fields again\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const signInForm = () => {\r\n        return (\r\n            <div className = 'row'>\r\n                <div className ='col-md-6 offset-sm-3 text-left'>\r\n                    <form>\r\n                        <div className = 'form-group'>\r\n                            <label className = 'text-light'>Username</label>\r\n                            <input \r\n                            className = 'form-control'\r\n                            value = {username}\r\n                            onChange = {handleChange('username')}\r\n                            type = 'text'/>\r\n                        </div>\r\n                        <div className = 'form-group'>\r\n                            <label className = 'text-light'>Password</label>\r\n                            <input \r\n                            className = 'form-control'\r\n                            value = {password}\r\n                            onChange = {handleChange('password')}\r\n                            type = 'password'/>\r\n                        </div><br/>\r\n                        <button onClick={onSubmit} className = 'btn btn-success btn-block'>Submit</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Base title = 'Sign-in' description = 'Sign-in nerdy user'>\r\n            {loadingMessage()}\r\n            {signInForm()}\r\n            <p className = 'text-center'>{JSON.stringify(values)}</p>\r\n            {performRedirect()}\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default Signin"]},"metadata":{},"sourceType":"module"}