{"ast":null,"code":"import { API } from '../../backend';\nexport const signup = user => {\n  return fetch(`${API}user/`, {\n    method: \"POST\",\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const signin = user => {\n  const formData = new FormData();\n\n  for (const name in user) {\n    formData.append(name, user[name]);\n  }\n\n  return fetch(`${API}user/login`, {\n    method: \"POST\",\n    body: formData\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const authenticate = (data, next) => {\n  if (typeof window !== undefined) {\n    localStorage.setItem('jwt', JSON.stringify(data));\n    next();\n  }\n};\nexport const isAuthenticated = () => {\n  if (typeof window == undefined) {\n    return false;\n  }\n\n  if (localStorage.getItem('jwt')) {\n    const data = JSON.parse(localStorage.getItem('jwt'));\n    console.log(data.user['id']);\n    return JSON.parse(localStorage.getItem('jwt'));\n  } else {\n    return false;\n  }\n};\nexport const signout = next => {\n  const userID = isAuthenticated() && isAuthenticated().user.id;\n\n  if (typeof window !== undefined) {\n    localStorage.removeItem('jwt');\n    return fetch(`${API}user/logout/${userID}`, {\n      method: 'GET'\n    }).then(response => {\n      console.log('Signout success');\n      next();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n};\nexport const addTaskFunc = (task, id) => {\n  const formData = new FormData();\n\n  for (const name in task) {\n    formData.append(name, task[name]);\n  }\n\n  return fetch(`${API}tracker/add_task${id}`, {\n    method: \"POST\",\n    body: formData\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["C:/Users/10647616/Downloads/time_entry/time_entry/frontend/src/auth/helper/index.js"],"names":["API","signup","user","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","catch","err","console","log","signin","formData","FormData","name","append","authenticate","data","next","window","undefined","localStorage","setItem","isAuthenticated","getItem","parse","signout","userID","id","removeItem","addTaskFunc","task"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,eAAlB;AAEA,OAAO,MAAMC,MAAM,GAAGC,IAAI,IAAI;AAC1B,SAAOC,KAAK,CAAG,GAAEH,GAAI,OAAT,EAAiB;AACzBI,IAAAA,MAAM,EAAG,MADgB;AAEzBC,IAAAA,OAAO,EAAG;AACNC,MAAAA,MAAM,EAAC,kBADD;AAEN,sBAAe;AAFT,KAFe;AAMzBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AANmB,GAAjB,CAAL,CAQNQ,IARM,CAQDC,QAAQ,IAAG;AACb,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAVM,EAWNC,KAXM,CAWAC,GAAG,IAAGC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXN,CAAP;AAYH,CAbM;AAeP,OAAO,MAAMG,MAAM,GAAGf,IAAI,IAAG;AACzB,QAAMgB,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;AAEA,OAAI,MAAMC,IAAV,IAAkBlB,IAAlB,EAAuB;AACnBgB,IAAAA,QAAQ,CAACG,MAAT,CAAgBD,IAAhB,EAAsBlB,IAAI,CAACkB,IAAD,CAA1B;AACH;;AAED,SAAOjB,KAAK,CAAE,GAAEH,GAAI,YAAR,EAAoB;AAC5BI,IAAAA,MAAM,EAAE,MADoB;AAE5BG,IAAAA,IAAI,EAAEW;AAFsB,GAApB,CAAL,CAINR,IAJM,CAIDC,QAAQ,IAAG;AACb,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GANM,EAONC,KAPM,CAOCC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPT,CAAP;AAQH,CAfM;AAkBP,OAAO,MAAMQ,YAAY,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACxC,MAAI,OAAOC,MAAP,KAAkBC,SAAtB,EAAgC;AAC5BC,IAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA2BpB,IAAI,CAACC,SAAL,CAAec,IAAf,CAA3B;AACAC,IAAAA,IAAI;AACP;AACJ,CALM;AAQP,OAAO,MAAMK,eAAe,GAAG,MAAM;AACjC,MAAI,OAAOJ,MAAP,IAAiBC,SAArB,EAA+B;AAC3B,WAAO,KAAP;AACH;;AACD,MAAGC,YAAY,CAACG,OAAb,CAAqB,KAArB,CAAH,EAA+B;AAC3B,UAAMP,IAAI,GAAGf,IAAI,CAACuB,KAAL,CAAWJ,YAAY,CAACG,OAAb,CAAqB,KAArB,CAAX,CAAb;AACAf,IAAAA,OAAO,CAACC,GAAR,CAAYO,IAAI,CAACrB,IAAL,CAAU,IAAV,CAAZ;AACA,WAAOM,IAAI,CAACuB,KAAL,CAAWJ,YAAY,CAACG,OAAb,CAAqB,KAArB,CAAX,CAAP;AACH,GAJD,MAIK;AACD,WAAO,KAAP;AACH;AACJ,CAXM;AAcP,OAAO,MAAME,OAAO,GAAGR,IAAI,IAAG;AAC1B,QAAMS,MAAM,GAAGJ,eAAe,MAAMA,eAAe,GAAG3B,IAAlB,CAAuBgC,EAA3D;;AAEA,MAAI,OAAOT,MAAP,KAAkBC,SAAtB,EAAgC;AAC5BC,IAAAA,YAAY,CAACQ,UAAb,CAAwB,KAAxB;AAEA,WAAOhC,KAAK,CAAE,GAAEH,GAAI,eAAciC,MAAO,EAA7B,EAA+B;AACvC7B,MAAAA,MAAM,EAAC;AADgC,KAA/B,CAAL,CAGNM,IAHM,CAGDC,QAAQ,IAAI;AACdI,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAQ,MAAAA,IAAI;AACP,KANM,EAONX,KAPM,CAOCC,GAAD,IAAS;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,KAP3B,CAAP;AAQH;AACJ,CAfM;AAiBP,OAAO,MAAMsB,WAAW,GAAG,CAACC,IAAD,EAAOH,EAAP,KAAa;AACpC,QAAMhB,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;AAEA,OAAI,MAAMC,IAAV,IAAkBiB,IAAlB,EAAuB;AACnBnB,IAAAA,QAAQ,CAACG,MAAT,CAAgBD,IAAhB,EAAsBiB,IAAI,CAACjB,IAAD,CAA1B;AACH;;AAED,SAAOjB,KAAK,CAAE,GAAEH,GAAI,mBAAkBkC,EAAG,EAA7B,EAA+B;AACvC9B,IAAAA,MAAM,EAAE,MAD+B;AAEvCG,IAAAA,IAAI,EAAEW;AAFiC,GAA/B,CAAL,CAINR,IAJM,CAIDC,QAAQ,IAAG;AACb,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GANM,EAONC,KAPM,CAOCC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPT,CAAP;AAQH,CAfM","sourcesContent":["import {API} from '../../backend';\r\n\r\nexport const signup = user => {\r\n    return fetch (`${API}user/`, {\r\n        method : \"POST\",\r\n        headers : {\r\n            Accept:'application/json',\r\n            'Content-Type':'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n    .then(response =>{\r\n        return response.json();\r\n    })\r\n    .catch(err =>console.log(err));\r\n};\r\n\r\nexport const signin = user =>{\r\n    const formData = new FormData()\r\n\r\n    for(const name in user){\r\n        formData.append(name, user[name])\r\n    }\r\n\r\n    return fetch(`${API}user/login`,{\r\n        method: \"POST\",\r\n        body: formData\r\n    })\r\n    .then(response =>{\r\n        return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n\r\nexport const authenticate = (data, next) => {\r\n    if (typeof window !== undefined){\r\n        localStorage.setItem('jwt',JSON.stringify(data));\r\n        next();\r\n    }\r\n};\r\n\r\n\r\nexport const isAuthenticated = () => {\r\n    if (typeof window == undefined){\r\n        return false\r\n    }\r\n    if(localStorage.getItem('jwt')){\r\n        const data = JSON.parse(localStorage.getItem('jwt'))\r\n        console.log(data.user['id'])\r\n        return JSON.parse(localStorage.getItem('jwt'))\r\n    }else{\r\n        return false;\r\n    }\r\n};\r\n\r\n\r\nexport const signout = next =>{\r\n    const userID = isAuthenticated() && isAuthenticated().user.id\r\n\r\n    if (typeof window !== undefined){\r\n        localStorage.removeItem('jwt')\r\n\r\n        return fetch(`${API}user/logout/${userID}`,{\r\n            method:'GET'\r\n        })\r\n        .then(response => {\r\n            console.log('Signout success')\r\n            next();\r\n        })\r\n        .catch((err) => {console.log(err)});\r\n    }\r\n};\r\n\r\nexport const addTaskFunc = (task, id) =>{\r\n    const formData = new FormData()\r\n\r\n    for(const name in task){\r\n        formData.append(name, task[name])\r\n    }\r\n\r\n    return fetch(`${API}tracker/add_task${id}`,{\r\n        method: \"POST\",\r\n        body: formData\r\n    })\r\n    .then(response =>{\r\n        return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};"]},"metadata":{},"sourceType":"module"}